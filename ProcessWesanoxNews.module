<?php
namespace ProcessWire;

class ProcessWesanoxNews extends Process implements Module
{
    public static function getModuleInfo()
    {
        return array(
            'title' => 'wesanox News Process',
            'summary' => 'A little News Tool for Processwire made by wesanox.',
            'version' => '0.0.1',
            'author' => 'wesanox',
            'icon' => 'newspaper-o',
            'page'       => array(
                'name' => 'wesanox-news',
                'parent' => 'setup',
                'title' => 'News Kategorien',
            ),
            'requires' => 'WesanoxNews',
        );
    }

    /**
     * @return void
     * @throws WireException
     * @throws WirePermissionException
     */
    public function init() : void
    {
        $this->wire('modules')->get('JqueryUI')->use('vex');
        parent::init();
    }

    /**
     * @return string
     * @throws WirePermissionException
     */
    public function ___execute() : string
    {
        $button = $this->modules->get('InputfieldButton');
        $button->value = __('Add new');
        $button->icon = 'plus-circle';
        $button->attr('href', './add/');
        $addButton = $button->render();

        // Return view data
        return $this->renderTable() . $addButton;
    }

    /**
     * @return mixed
     * @throws WirePermissionException
     */
    public function ___executeAdd() : string
    {
        if ($this->input->post->submit) {
            $cat_name = $this->input->post->name;

            if (empty($cat_name)) {
                $this->error(__('Please fill in all fields'));
            } else {
                $this->addCategory($cat_name);
                $this->message(__('Category added'));
                $this->session->redirect($this->page->url);
            }
        }

        $form = $this->modules->get('InputfieldForm');
        $wrapper = $this->modules->get('InputfieldWrapper');

        $f = $this->modules->get('InputfieldText');
        $f->label = __('Category Name');
        $f->description = __('Any combination of letters (a-z), numbers (0-9).');
        $f->attr('name', 'name');
        $f->required = true;
        $wrapper->add($f);

        $submit = $this->modules->get('InputfieldSubmit');
        $submit->attr('name', 'submit');
        $submit->attr('value', __('Save'));
        $wrapper->add($submit);

        $form->add($wrapper);

        return $form->render();
    }

    /**
     * @TODO changes ar not saved yet and we get an redirect every time
     *
     * @return mixed
     * @throws WireException
     * @throws WirePermissionException
     */
    public function ___executeEdit() : string
    {
        $id = $this->input->get('id');

        if ($this->input->post->submit) {
            $cat_name = $this->input->post->name;

            if (empty($cat_name)) {
                $this->error(__('Please fill in all fields'));
            } else {
                $this->editCategory($id, $cat_name);
                $this->message(__('Category saved'));
                $this->session->redirect($this->page->url . '/edit?id=' . $id);
            }
        }

        $settings_page = $this->pages->get('template=options_news');
        $category = $settings_page->repeater_categories_news->get("id=$id");

        $form = $this->modules->get('InputfieldForm');
        $wrapper = $this->modules->get('InputfieldWrapper');


        $f = $this->modules->get('InputfieldText');
        $f->label = __('Category Name');
        $f->description = __('Any combination of letters (a-z), numbers (0-9).');
        $f->placeholder = $category->headline;
        $f->attr('name', 'name');
        $f->required = true;
        $wrapper->add($f);

        $submit = $this->modules->get('InputfieldSubmit');
        $submit->attr('name', 'submit');
        $submit->attr('value', __('Save'));
        $wrapper->add($submit);

        $form->add($wrapper);

        return $form->render();
    }

    /**
     * @param $cat_name
     * @return void
     */
    private function addCategory($cat_name) : void
    {
        $settings_page = $this->pages->get('template=options_news');

        $settings_page->of(false);

        $category = $settings_page->repeater_categories_news->getNew();
        $category->headline = $cat_name;
        $category->save();

        $settings_page->save();
    }

    /**
     * @TODO changes ar not saved yet
     *
     * @param $id
     * @param $cat_name
     * @return void
     * @throws WireException
     */
    private function editCategory($id, $cat_name) : void
    {
        $settings_page = $this->pages->get('template=options_news');

        $category = $settings_page->repeater_categories_news->get("id=$id");

        $settings_page->of(false);

        $category->of(false);
        $category->headline = $cat_name;
        $category->save();

        $settings_page->save();
    }

    /**
     * @TODO create the delete Category method
     *
     * @param $cat_name
     * @return void
     */
    private function deleteCategory($cat_name) : void
    {
        $settings_page = $this->pages->get('template=options_news');


    }


    /**
     * @return mixed
     * @throws WirePermissionException
     */
    private function renderTable() : mixed
    {
        $settings_page = $this->pages->get('template=options_news');
        $table = $this->modules->get('MarkupAdminDataTable');

        $table->setSortable(false);
        $table->setEncodeEntities(false);
        $table->headerRow([__('Category Name'), __('Actions')]);

        foreach ( $settings_page->repeater_categories_news AS $category) {
            $buttonDelete = $this->modules->get('InputfieldButton');
            $buttonDelete->value = 'delete';
            $buttonDelete->icon = 'trash';
            $buttonDelete->setSmall()->setSecondary();
            $buttonDelete->attr('data-url', './delete/');
            $buttonDelete->attr('data-category', $category->id);
            $buttonDelete->attr('data-message', __('Do you really want to delete this user?'));
            $buttonDelete->addClass('InputfieldButtonLink');

            $table->row([
                '<a href="./edit?id=' . $category->id . '">' . $category->headline . "</a>",
                $buttonDelete->render(),
            ]);
        }

        return $table->render();
    }
}